<% if (ts && !typesOnly) { %> import { type AxiosRequestConfig } from 'axios' <% } %>
<% if (!typesOnly) { %> import { request } from '@/request' <% } %>
<% if (ts) { %> import { type paths } from './<%- typesFilename %>' <% } %>

<% if (!typesOnly) { %>
<% apiModule.payloads.forEach(payload => { %> -%>
export const <%- payload.fn %> = (config<% if (ts) { %>: AxiosRequestConfig<<%- payload.typeRequestBody %>> <% } %>) 
=> request<% if (ts) { %><any, <%- payload.typeResponseBody %>><% } %>({
  url: '<%- payload.url %>', 
  method: '<%- payload.method %>',
  ...config
})

<% }) %>
<% } %>

<% if (ts) { %>
<% apiModule.payloads.forEach(payload => { %> -%>
export type <%- payload.type %> = <%- payload.typeValue %>

<% }) %>

<% apiModule.payloads.forEach(payload => { %> -%>
  <% if (payload.typeQueryValue) { %>
  export type <%- payload.typeQuery %> = <%- payload.typeQueryValue %>
  
<% } %>
<% }) %>

<% apiModule.payloads.forEach(payload => { %> -%>
<% if (payload.typeRequestBodyValue) { %>
export type <%- payload.typeRequestBody %> = <%- payload.typeRequestBodyValue %>

<% } %>
<% }) %>

<% apiModule.payloads.forEach(payload => { %> -%>
<% if (payload.typeResponseBodyValue) { %>
export type <%- payload.typeResponseBody %> = <%- payload.typeResponseBodyValue %>
  
<% } %>
<% }) %>
<% } %>

