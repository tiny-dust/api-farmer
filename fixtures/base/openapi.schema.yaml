openapi: 3.0.3
info:
  title: Sample API
  description: A simple API for testing OpenAPI schemas.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: https://staging-api.example.com/v1
    description: Staging server
paths:
  /api/v1/users:
    get:
      summary: Get a list of users
      description: Returns a list of users.
      parameters:
        - name: limit
          in: query
          required: false
          description: The maximum number of users to return.
          schema:
            type: integer
            minimum: 1
            default: 10
        - name: offset
          in: query
          required: false
          description: The number of users to skip before starting to collect the result set.
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Adds a new user to the system.
      requestBody:
        description: User object to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully.
  /api/v1/users/{userId}:
    get:
      summary: Get user by ID
      description: Retrieves a user by their ID.
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        '200':
          description: A single user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.
  /api/v1/users/{userId}/resources:
    get:
      summary: Get resources for a user
      description: Retrieves a list of resources associated with the user.
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: Filter resources by type.
          schema:
            type: string
      responses:
        '200':
          description: A list of resources.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
    post:
      summary: Create a new resource for a user
      description: Adds a new resource to the user's collection.
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      requestBody:
        description: Resource object to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '201':
          description: Resource created successfully.
  /api/v1/users/{userId}/resources/{resourceId}:
    get:
      summary: Get a specific resource for a user
      description: Retrieves details of a specific resource associated with the user.
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
        - name: resourceId
          in: path
          required: true
          description: ID of the resource
          schema:
            type: string
      responses:
        '200':
          description: Resource details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '404':
          description: Resource not found.
    delete:
      summary: Delete a specific resource for a user
      description: Deletes a resource associated with the user.
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
        - name: resourceId
          in: path
          required: true
          description: ID of the resource
          schema:
            type: string
      responses:
        '204':
          description: Resource deleted successfully.
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the user.
        name:
          type: string
          description: The name of the user.
        email:
          type: string
          format: email
          description: The email of the user.
        age:
          type: integer
          description: The age of the user.
          minimum: 0
    Resource:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the resource.
        type:
          type: string
          description: The type of the resource.
        attributes:
          type: object
          description: Additional attributes of the resource.
